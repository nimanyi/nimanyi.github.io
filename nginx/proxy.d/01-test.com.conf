#
# test.com
#
# 先配置主机

#设置跳转
server {
	listen       80;
	server_name   test.com;
	location / {
		#把test.com域名转到www.test.com
		rewrite (.*) http://www.test.com$1 permanent;
	}
}

server
{
	listen  80;
	listen	443;
	server_name www.test.com;
	index index.html index.htm Default.aspx index.php;


# 管道方式记录日志 仅仅tengine支持
	access_log "pipe:/usr/sbin/cronolog /var/log/nginx/test.com-access_logs-%Y%m%d%H" access_json;
	error_log  "pipe:/usr/sbin/cronolog /var/log/nginx/test.com-error_log-%Y%m%d%H";

#
#全域名限制
#limit_req zone=ddos burst=60;
	location / {
           #disable scan
                if ( $iplist = "1" ){
           		proxy_pass http://other_virtual;
               }
           #deny 404
               if ( $ip_404 = "1" ){
                        return 403;
               } 
            
		proxy_pass http://www_server;
		#如果后端的服务器返回502、504、执行超时等错误，自动将请求转发到upstream负载均衡池中的另一台服务器，实现故障转移。
		proxy_next_upstream http_502 http_503 http_504  error timeout invalid_header;
#      proxy_read_timeout 10;
#		limit_req zone=ddos burst=20 forbid_action=@ddos;
#
	}

	location =/ {
		proxy_pass http://127.0.0.1:8088;
		proxy_cache_methods GET HEAD POST;
		#由于后端数据可能写入不一致，html页只在一台服务器上生成，所以出现404轮询所有服务器找到生成404页面的服务器。
		proxy_next_upstream  http_502 http_503 error timeout invalid_header;

		#根据Key值哈希，存储缓存内容到二级缓存目录内
		proxy_cache cache_www;
		#设置浏览器过期时间
		expires 2m;
		#对不同的HTTP状态码设置不同的缓存时间
		proxy_cache_valid 200 5m;
		#主要为解决首页有时候提示下载的问题
		default_type text/html;
	}
 
       location ~ .*\.txt$ {
             root /var/www/html/ ;
          }




	location ~* ^/static/.*\.(html|htm|js)$ {
		proxy_pass http://127.0.0.1:8088;
		proxy_cache_methods GET HEAD POST;

		#根据Key值哈希，存储缓存内容到二级缓存目录内
		proxy_cache cache_www;
		#设置浏览器过期时间
		expires 5m;
		#对不同的HTTP状态码设置不同的缓存时间
		proxy_cache_valid 200 1h;
		proxy_cache_valid any 1m;
	}


	location ~ .*\.(js|css)$ {
		proxy_pass http://127.0.0.1:8088;
		#根据Key值哈希，存储缓存内容到二级缓存目录内
		proxy_cache cache_www;
		#      proxy_cache_key $host$uri$is_args$args;
		#设置浏览器过期时间
		expires 1d;
		#对不同的HTTP状态码设置不同的缓存时间
		proxy_cache_valid 200 1d;
		proxy_cache_valid any 1m;
	}

	location ~ .*\.(gif|jpg|jpeg|png|bmp|ico|swf)$ { 
		proxy_pass http://127.0.0.1:8088;
		#根据Key值哈希，存储缓存内容到二级缓存目录内
		proxy_cache cache_www;
		#      proxy_cache_key $host$uri$is_args$args;
		#设置浏览器过期时间
		expires 30d;
		#对不同的HTTP状态码设置不同的缓存时间     
		proxy_cache_valid 200 1d;
		proxy_cache_valid any 1m;
	}
	#引入排除文件
	include ext/limit-files.conf;

}

server
{
	listen       8088;
	server_name   www.test.com;
	index Default.aspx index.php;
	# 管道方式记录日志 仅仅tengine支持
	access_log "pipe:/usr/sbin/cronolog /var/log/nginx/src.test.com-access_log-%Y%m%d" access;

	location / {
		proxy_pass http://www_server;
		#如果后端的服务器返回502、504、执行超时等错误，自动将请求转发到upstream负载均衡池中的另一台服务器，实现故障转移。
		proxy_next_upstream http_502 http_503 http_504 error timeout invalid_header;
		proxy_ignore_headers Set-Cookie;
		proxy_hide_header Set-Cookie;
		proxy_hide_header X-AspNet-Version;
		proxy_hide_header X-UA-Compatible;
		proxy_hide_header Cache-Control;
	}

}

