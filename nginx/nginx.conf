#设置运行时的用户和组
user  www www;
#进程数
#worker_processes 8;
#多核心进程优化 8核心
#worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000; 
#一个nginx 进程打开的最多文件描述符数目
worker_rlimit_nofile 65535;

#错误日志
#pipe方式不适合主日志
error_log  /data/log/nginx/error.log;
#error_log  /dev/null;
pid     /var/run/nginx/nginx.pid;

events {
#使用高效的Epoll事件模型
	use epoll;
#每个进程允许的最大连接数
	worker_connections  65535;
}

http {
	include       mime.types;
	default_type  application/octet-stream;

	sendfile        on;
	keepalive_timeout  60;
#头伪装 仅限于淘宝的tengine
	server_tag Microsoft-IIS/8.5;

#隐藏版本号
	server_tokens off;
#        proxy_hide_header X-Powered-By;

#使用网宿CDN自定义头IP来获取用户真实IP
        proxy_set_header  Cdn-Src-Ip   $http_Cdn_Src_Ip;

#Use aliyun CDN 
        proxy_set_header X-Forwarded-For $http_x_forwarded_for;

#加大hash表存储值
        proxy_headers_hash_bucket_size 1024;
        proxy_headers_hash_max_size 512;

#设置日志格式
         log_format  access_ws  '$http_Cdn_Src_Ip - $remote_addr - $remote_user [$time_local] "$request_method http://$http_host$uri?$query_string $server_protocol" '
                '$status $body_bytes_sent "$http_referer" $request_time $upstream_addr $upstream_response_time "$http_user_agent"';
    
         log_format  access  '$http_x_forwarded_for - $remote_addr - $remote_user [$time_local] "$request_method http://$http_host$uri?$query_string $server_protocol" '
                '$status $body_bytes_sent "$http_referer" $request_time $upstream_addr $upstream_response_time "$http_user_agent"';

	log_format access_json '{"@timestamp":"$time_iso8601",'
        '"host":"$server_addr",'
        '"clientip":"$http_x_forwarded_for",'
        '"size":$body_bytes_sent,'
        '"responsetime":$request_time,'
        '"upstreamtime":"$upstream_response_time",'
        '"upstreamhost":"$upstream_addr",'
        '"http_host":"$host",'
        '"url":"$uri",'
        '"domain":"$host",'
        '"xff":"$http_x_forwarded_for",'
        '"referer":"$http_referer",'
        '"agent":"$http_user_agent",'
	'"method":"$request_method",'
        '"status":"$status"}';


#pipe方式不适合主日志
#    access_log  /var/log/nginx/access.log;
    access_log /dev/null;

    #解决400 Bad Request错误
    client_header_buffer_size 128k;
    large_client_header_buffers 4 128k;

#GeoIP
        geoip_city /usr/share/GeoIP/GeoLiteCity.dat;

#开启gzip压缩
	gzip on;
	gzip_min_length  1k;
	gzip_buffers     4 16k;
	gzip_http_version 1.0;
	gzip_comp_level 9;
#指定压缩类型
	gzip_types    text/plain application/x-javascript text/css application/xml;
#加vary头
	gzip_vary on;

#限制并发连接
         limit_req_zone $http_x_forwarded_for zone=user:30m rate=30r/s;
#        limit_req_zone $binary_remote_addr zone=add:10m rate=1r/m;
#        limit_req_zone $binary_remote_addr zone=login:10m rate=1r/m;
#全局限制
#limit_req zone=ddos burst=30;

#全局IP封锁
	include ext/deny-list.conf;

#白名单
	include ext/white-list.conf;

#优化代理模式参数
	include ext/proxy.conf;

#默认主机
	server {
		listen       80;
		server_name  localhost;
#444是nginx内置的错误代码，return 444
#服务器会立刻关闭连接，就好象服务不存在一样。
		return 444;
	}

#引入代理主机
        include proxy.d/*.conf;

#引入虚拟主机
	include vhost.d/*.conf;

#Disable Scan product list 
geo $http_x_forwarded_for $iplist {
       include ext/iplist.conf;
          }

geo $http_x_forwarded_for $ip_404 {
       include ext/deny_404.conf;
          }

client_header_timeout 30;
client_body_timeout 30;

}

